local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=0;local F;local G;local H;local I;local J;local K;local L;local M;local N;local O;local P;local Q;while true do if E==3 then function L()local R=0;local S;local T;local U;local V;local W;local X;while true do if R==0 then S=K()T=K()R=1 end;if R==2 then W=H(T,21,31)X=H(T,600-(367+201))==1 and-1 or 1;R=3 end;if R==1 then U=1;V=H(T,620-(555+64),20)*2^(963-(857+74))+S;R=2 end;if 3==R then if W==0 then if V==0 then return X*0 else local Y=0;while true do if 0==Y then W=1;U=927-(214+713)break end end end elseif W==2047 then return V==0 and X*1/0 or X*NaN end;return u(X,W-1023)*(U+V/2^52)end end end;M=nil;function M(Z)local _=0;local a0;local a1;while true do if 3==_ then return s(a1)end;if _==1 then a0=p(C,F,F+Z-1)F=F+Z;_=2 end;if _==0 then a0=nil;if not Z then local a2=0;while true do if a2==0 then Z=K()if Z==0+0 then return""end;break end end end;_=1 end;if _==2 then a1={}for a3=1,#a0 do a1[a3]=o(n(p(a0,a3,a3)))end;_=3 end end end;N=K;E=4 end;if E==1 then function H(a4,a5,a6)if a6 then local a7=0;local a8;while true do if a7==0 then a8=a4/2^(a5-1)%2^(a6-1-(a5-1)+1)return a8-a8%1 end end else local a9=0;local aa;while true do if a9==0 then aa=2^(a5-1)return a4%(aa+aa)>=aa and 1 or 0 end end end end;I=nil;function I()local ab=0;local ac;while true do if ab==0 then ac=n(C,F,F)F=F+1;ab=1 end;if ab==1 then return ac end end end;J=nil;E=2 end;if E==4 then O=nil;function O(...)return{...},y("#",...)end;P=nil;function P()local ad={}local ae={}local af={}local ag={ad,ae,nil,af}local ah=K()local ai={}for aj=1,ah do local ak=I()local al;if ak==1 then al=I()~=0 elseif ak==2 then al=L()elseif ak==3 then al=M()end;ai[aj]=al end;ag[3]=I()for am=1+0,K()do local an=0;local ao;while true do if an==0 then ao=I()if H(ao,878-(282+595),1)==0 then local ap=0;local aq;local ar;local as;while true do if 1==ap then as={J(),J(),nil,nil}if aq==0 then as[3]=J()as[4]=J()elseif aq==1 then as[3]=K()elseif aq==2 then as[3]=K()-2^16 elseif aq==3 then local at=0;while true do if at==0 then as[3]=K()-2^16;as[4]=J()break end end end;ap=2 end;if ap==0 then aq=H(ao,2,3)ar=H(ao,4,6)ap=1 end;if ap==2 then if H(ar,1,1)==1+0 then as[2]=ai[as[2]]end;if H(ar,2,2)==1-0 then as[3]=ai[as[3]]end;ap=3 end;if ap==3 then if H(ar,1068-(68+997),3)==1 then as[1274-(226+1044)]=ai[as[17-13]]end;ad[am]=as;break end end end;break end end end;for au=1,K()do ae[au-1]=P()end;return ag end;E=5 end;if E==5 then Q=nil;function Q(av,aw,ax)local ay=av[1]local az=av[2]local aA=av[3]return function(...)local aB=ay;local aC=az;local aD=aA;local aE=O;local aF=1;local aG=-1;local aH={}local aI={...}local aJ=y("#",...)-1;local aK={}local aL={}for aM=0,aJ do if aM>=aD then aH[aM-aD]=aI[aM+1]else aL[aM]=aI[aM+1]end end;local aN=aJ-aD+1;local aO;local aP;while true do aO=aB[aF]aP=aO[1]if aP<=47 then if aP<=23 then if aP<=11 then if aP<=5 then if aP<=119-(32+85)then if aP<=0 then aL[aO[2]]=aL[aO[3]]%aO[4]elseif aP==1 then local aQ=aO[2]local aR=aO[4]local aS=aQ+2;local aT={aL[aQ](aL[aQ+1],aL[aS])}for aU=1,aR do aL[aS+aU]=aT[aU]end;local aV=aT[1]if aV then aL[aS]=aV;aF=aO[3]else aF=aF+1 end else aL[aO[2]]()end elseif aP<=3 then if aL[aO[2]]==aL[aO[4]]then aF=aF+1 else aF=aO[3]end elseif aP>4 then for aW=aO[2],aO[3]do aL[aW]=nil end else aL[aO[2]]={}end elseif aP<=8 then if aP<=6 then local aX=0;local aY;local aZ;while true do if aX==1 then aL[aY+1]=aZ;aL[aY]=aZ[aO[4]]break end;if aX==0 then aY=aO[2]aZ=aL[aO[3]]aX=1 end end elseif aP>7 then aL[aO[2]]=aL[aO[3+0]][aO[4]]else aL[aO[1+1]]=aL[aO[3]]%aL[aO[4]]end elseif aP<=9 then aF=aO[3]elseif aP==10 then do return end else do return aL[aO[2]]()end end elseif aP<=17 then if aP<=971-(892+65)then if aP<=12 then local a_=aO[2]aL[a_]=aL[a_]()elseif aP>13 then local b0=aC[aO[3]]local b1;local b2={}b1=w({},{[h("\28\33\26\10\195\193\70","\202\67\126\115\100\167\164\62")]=function(b3,b4)local b5=b2[b4]return b5[1][b5[2]]end,[h("\224\22\142\83\76\214\39\132\83\67","\59\191\73\224\54")]=function(b6,b7,b8)local b9=b2[b7]b9[1][b9[2]]=b8 end})for ba=1,aO[9-5]do aF=aF+1;local bb=aB[aF]if bb[1]==93 then b2[ba-1]={aL,bb[3]}else b2[ba-(1-0)]={aw,bb[3]}end;aK[#aK+351-(87+263)]=b2 end;aL[aO[2]]=Q(b0,b1,ax)else local bc=0;local bd;while true do if bc==0 then bd=aO[2]aL[bd]=aL[bd](z(aL,bd+1,aG))break end end end elseif aP<=15 then aL[aO[2]]=aO[3]elseif aP==196-(67+113)then aL[aO[2]]=#aL[aO[3]]else aL[aO[2]]=aL[aO[3+0]]%aL[aO[4]]end elseif aP<=20 then if aP<=18 then local be=0;local bf;while true do if be==0 then bf=aO[2]aL[bf]=aL[bf](z(aL,bf+1,aO[3]))break end end elseif aP>19 then aL[aO[4-2]]=aw[aO[3+0]]else local bg=aO[7-5]local bh,bi=aE(aL[bg](aL[bg+1]))aG=bi+bg-1;local bj=0;for bk=bg,aG do local bl=0;while true do if bl==0 then bj=bj+1;aL[bk]=bh[bj]break end end end end elseif aP<=21 then if not aL[aO[954-(802+150)]]then aF=aF+2-1 else aF=aO[3]end elseif aP>22 then aL[aO[2]]=aL[aO[3]]else local bm=0;local bn;while true do if bm==0 then bn=aO[2]aL[bn](z(aL,bn+1,aO[3]))break end end end elseif aP<=35 then if aP<=29 then if aP<=46-20 then if aP<=24 then aL[aO[2]]=ax[aO[3]]elseif aP==25 then do return end else local bo=aC[aO[3]]local bp;local bq={}bp=w({},{[h("\216\61\243\199\227\7\226","\169\135\98\154")]=function(br,bs)local bt=0;local bu;while true do if bt==0 then bu=bq[bs]return bu[1][bu[2]]end end end,[h("\244\72\42\81\234\58\198\207\114\60","\168\171\23\68\52\157\83")]=function(bv,bw,bx)local by=0;local bz;while true do if 0==by then bz=bq[bw]bz[1][bz[2]]=bx;break end end end})for bA=1,aO[4]do local bB=0;local bC;while true do if 1==bB then if bC[1]==93 then bq[bA-1]={aL,bC[3]}else bq[bA-1]={aw,bC[8-5]}end;aK[#aK+1+0]=bq;break end;if bB==0 then aF=aF+1+0;bC=aB[aF]bB=1 end end end;aL[aO[2]]=Q(bo,bp,ax)end elseif aP<=27 then if aO[2]==aL[aO[4]]then aF=aF+1 else aF=aO[3-0]end elseif aP==1215-(1069+118)then local bD=0;local bE;while true do if bD==0 then bE=aO[2]aL[bE]=aL[bE](aL[bE+1])break end end else aL[aO[2]][aL[aO[3]]]=aL[aO[4]]end elseif aP<=32 then if aP<=30 then local bF=aO[2]aL[bF](aL[bF+1])elseif aP==31 then local bG=aO[2]aL[bG](z(aL,bG+1,aG))else local bH=aO[3]local bI=aL[bH]for bJ=bH+1,aO[8-4]do bI=bI..aL[bJ]end;aL[aO[2]]=bI end elseif aP<=72-39 then aL[aO[1+1]][aL[aO[3]]]=aO[4]elseif aP==34 then local bK=aO[2]aL[bK]=aL[bK](z(aL,bK+1,aO[3]))else local bL=0;local bM;while true do if bL==0 then bM=aO[2]aL[bM](z(aL,bM+1,aO[3]))break end end end elseif aP<=41 then if aP<=38 then if aP<=36 then aL[aO[2]]=aL[aO[3]][aO[4]]elseif aP>37 then local bN=aO[3]local bO=aL[bN]for bP=bN+1,aO[4]do bO=bO..aL[bP]end;aL[aO[3-1]]=bO else local bQ=0;local bR;local bS;while true do if bQ==0 then bR=aO[2]bS=aL[bR]bQ=1 end;if bQ==1 then for bT=bR+1,aG do t(bS,aL[bT])end;break end end end elseif aP<=39 then local bU=0;local bV;while true do if bU==0 then bV=aO[2]aL[bV](aL[bV+1])break end end elseif aP==40 then local bW=0;local bX;while true do if bW==0 then bX=aO[2]do return aL[bX](z(aL,bX+1,aO[3+0]))end;break end end else local bY=0;local bZ;local b_;local c0;while true do if bY==1 then c0=aL[bZ+2]if c0>0 then if b_>aL[bZ+1]then aF=aO[3]else aL[bZ+3]=b_ end elseif b_<aL[bZ+1]then aF=aO[3]else aL[bZ+3]=b_ end;break end;if 0==bY then bZ=aO[793-(368+423)]b_=aL[bZ]bY=1 end end end elseif aP<=44 then if aP<=42 then local c1=aO[2]local c2,c3=aE(aL[c1](z(aL,c1+3-2,aO[3])))aG=c3+c1-1;local c4=0;for c5=c1,aG do local c6=0;while true do if 0==c6 then c4=c4+19-(10+8)aL[c5]=c2[c4]break end end end elseif aP>43 then local c7=aO[2]local c8=aL[c7+2]local c9=aL[c7]+c8;aL[c7]=c9;if c8>0 then if c9<=aL[c7+3-2]then local ca=0;while true do if ca==0 then aF=aO[3]aL[c7+3]=c9;break end end end elseif c9>=aL[c7+1]then local cb=0;while true do if cb==0 then aF=aO[3]aL[c7+3]=c9;break end end end else aL[aO[2]]=#aL[aO[3]]end elseif aP<=45 then aL[aO[2]][aO[3]]=aL[aO[4]]elseif aP==46 then aL[aO[444-(416+26)]]=aO[3]+aL[aO[4]]else for cc=aO[2],aO[3]do aL[cc]=nil end end elseif aP<=71 then if aP<=59 then if aP<=53 then if aP<=50 then if aP<=48 then if aL[aO[6-4]]==aL[aO[4]]then aF=aF+1 else aF=aO[3]end elseif aP==49 then aL[aO[2]]=aO[3]else aL[aO[2]]=aL[aO[3]]+aO[4]end elseif aP<=51 then aL[aO[2]]=aw[aO[3]]elseif aP==52 then aL[aO[2]]=Q(aC[aO[3]],nil,ax)else local cd=aO[1+1]local ce=aO[4]local cf=cd+2;local cg={aL[cd](aL[cd+1],aL[cf])}for ch=1,ce do aL[cf+ch]=cg[ch]end;local ci=cg[1]if ci then aL[cf]=ci;aF=aO[3]else aF=aF+1 end end elseif aP<=56 then if aP<=54 then local cj=0;local ck;local cl;local cm;local cn;while true do if cj==1 then aG=cm+ck-1;cn=0;cj=2 end;if cj==0 then ck=aO[2]cl,cm=aE(aL[ck](aL[ck+1]))cj=1 end;if cj==2 then for co=ck,aG do local cp=0;while true do if cp==0 then cn=cn+1;aL[co]=cl[cn]break end end end;break end end elseif aP==96-41 then ax[aO[3]]=aL[aO[2]]else local cq=0;local cr;while true do if cq==0 then cr=aO[2]aL[cr]=aL[cr]()break end end end elseif aP<=495-(145+293)then aL[aO[2]][aO[3]]=aO[4]elseif aP>58 then local cs=0;local ct;local cu;while true do if cs==0 then ct=aO[2]cu=aL[aO[3]]cs=1 end;if cs==1 then aL[ct+1]=cu;aL[ct]=cu[aO[4]]break end end else local cv=0;local cw;local cx;local cy;local cz;while true do if cv==1 then aG=cy+cw-1;cz=0;cv=2 end;if cv==0 then cw=aO[2]cx,cy=aE(aL[cw](z(aL,cw+1,aG)))cv=1 end;if cv==2 then for cA=cw,aG do cz=cz+1;aL[cA]=cx[cz]end;break end end end elseif aP<=65 then if aP<=62 then if aP<=60 then local cB=aO[2]aL[cB]=aL[cB](aL[cB+1])elseif aP==61 then aL[aO[2]]()elseif aO[2]==aL[aO[4]]then aF=aF+1 else aF=aO[3]end elseif aP<=63 then aL[aO[2]][aL[aO[433-(44+386)]]]=aO[4]elseif aP==1550-(998+488)then local cC=aO[2]local cD={aL[cC](aL[cC+1])}local cE=0;for cF=cC,aO[4]do cE=cE+1;aL[cF]=cD[cE]end else aL[aO[1+1]][aO[3]]=aO[4]end elseif aP<=68 then if aP<=66 then if aL[aO[2]]then aF=aF+1 else aF=aO[3]end elseif aP==55+12 then do return aL[aO[774-(201+571)]]()end else local cG=aO[2]do return aL[cG](z(aL,cG+1,aO[3]))end end elseif aP<=1207-(116+1022)then local cH=0;local cI;while true do if cH==0 then cI=aO[2]aL[cI](z(aL,cI+1,aG))break end end elseif aP==70 then ax[aO[3]]=aL[aO[2]]else aL[aO[8-6]]={}end elseif aP<=83 then if aP<=77 then if aP<=74 then if aP<=72 then local cJ=aO[2+0]do return z(aL,cJ,aG)end elseif aP==73 then local cK=0;local cL;while true do if cK==0 then cL=aO[2]aL[cL]=aL[cL](z(aL,cL+1,aG))break end end else local cM=aO[2]local cN={aL[cM](aL[cM+1])}local cO=0;for cP=cM,aO[4]do cO=cO+1;aL[cP]=cN[cO]end end elseif aP<=75 then if aL[aO[2]]==aO[4]then aF=aF+1 else aF=aO[3]end elseif aP>76 then aL[aO[2]]=aL[aO[3]]+aO[14-10]else local cQ=0;local cR;local cS;while true do if cQ==0 then cR=aO[2]cS=aL[cR]cQ=1 end;if cQ==1 then for cT=cR+1,aG do t(cS,aL[cT])end;break end end end elseif aP<=80 then if aP<=78 then aL[aO[2]]=ax[aO[3]]elseif aP>79 then aL[aO[7-5]][aO[3]]=aL[aO[4]]else aL[aO[2]][aL[aO[862-(814+45)]]]=aL[aO[4]]end elseif aP<=81 then aL[aO[2]]=Q(aC[aO[3]],nil,ax)elseif aP==82 then local cU=0;local cV;local cW;local cX;local cY;while true do if cU==0 then cV=aO[2]cW,cX=aE(aL[cV](z(aL,cV+1,aG)))cU=1 end;if cU==1 then aG=cX+cV-1;cY=0;cU=2 end;if cU==2 then for cZ=cV,aG do local c_=0;while true do if 0==c_ then cY=cY+1;aL[cZ]=cW[cY]break end end end;break end end else local d0=0;local d1;while true do if d0==0 then d1=aO[4-2]do return z(aL,d1,aG)end;break end end end elseif aP<=89 then if aP<=86 then if aP<=84 then if not aL[aO[2]]then aF=aF+1+0 else aF=aO[2+1]end elseif aP>970-(261+624)then aL[aO[2]]=aO[3]+aL[aO[4]]else local d2=aO[2]local d3={aL[d2](z(aL,d2+1,aG))}local d4=0-0;for d5=d2,aO[4]do local d6=0;while true do if 0==d6 then d4=d4+1;aL[d5]=d3[d4]break end end end end elseif aP<=87 then local d7=aO[2]local d8={aL[d7](z(aL,d7+1,aG))}local d9=1080-(1020+60)for da=d7,aO[4]do d9=d9+1;aL[da]=d8[d9]end elseif aP==88 then aF=aO[1426-(630+793)]else local db=0;local dc;local dd;local de;while true do if 1==db then de=aL[dc]+dd;aL[dc]=de;db=2 end;if db==2 then if dd>0-0 then if de<=aL[dc+1]then local df=0;while true do if df==0 then aF=aO[3]aL[dc+3]=de;break end end end elseif de>=aL[dc+1]then local dg=0;while true do if 0==dg then aF=aO[3]aL[dc+3]=de;break end end end;break end;if db==0 then dc=aO[2]dd=aL[dc+6-4]db=1 end end end elseif aP<=92 then if aP<=90 then aL[aO[2]]=aL[aO[3]]%aO[4]elseif aP==91 then if aL[aO[2]]==aO[2+2]then aF=aF+1 else aF=aO[3]end else local dh=aO[2]local di,dj=aE(aL[dh](z(aL,dh+1,aO[3])))aG=dj+dh-1;local dk=0;for dl=dh,aG do dk=dk+1;aL[dl]=di[dk]end end elseif aP<=93 then aL[aO[6-4]]=aL[aO[3]]elseif aP>1841-(760+987)then local dm=0;local dn;local dp;local dq;while true do if dm==0 then dn=aO[2]dp=aL[dn]dm=1 end;if dm==1 then dq=aL[dn+2]if dq>0 then if dp>aL[dn+1]then aF=aO[3]else aL[dn+3]=dp end elseif dp<aL[dn+1]then aF=aO[3]else aL[dn+3]=dp end;break end end elseif aL[aO[2]]then aF=aF+1 else aF=aO[1916-(1789+124)]end;aF=aF+767-(745+21)end end end;return Q(P(),{},D)(...)end;if 2==E then function J()local dr,ds=n(C,F,F+2)F=F+2;return ds*256+dr end;K=nil;function K()local dt,du,dv,dw=n(C,F,F+8-5)F=F+7-3;return dw*16777216+dv*(168813-103277)+du*256+dt end;L=nil;E=3 end;if E==0 then F=1;G=nil;C=q(p(C,5),h("\186\63","\231\148\17\149\205\69\77"),function(dx)if n(dx,5-3)==79 then G=m(p(dx,1,1))return""else local dy=o(m(dx,16))if G then local dz=r(dy,G)G=nil;return dz else return dy end end end)H=nil;E=1 end end endv(),...)
